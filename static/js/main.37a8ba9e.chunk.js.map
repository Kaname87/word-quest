{"version":3,"sources":["contexts/GameContext.js","components/HeaderStatus.js","constants/constants.js","components/Slime.js","components/TargetScreen.js","components/CommandItem.js","components/Command.js","components/Message.js","components/GameResult.js","data/quiz.js","components/App.js","index.js"],"names":["GameContext","createContext","Wrapper","styled","div","_templateObject","HeaderStatus","_useContext","useContext","name","level","hp","mp","react_default","a","createElement","className","ANSWER_TYPE","NOT_YET","WRONG","CORRECT","Slime_templateObject","Slime","_ref","word","Slime_Wrapper","correct","keyframes","TargetScreen_templateObject","wrong","_templateObject2","_templateObject3","TargetScreen","answerType","currentQuiz","answerClass","TargetScreen_Wrapper","components_Slime","targetWord","ListItem","li","CommandItem_templateObject","CommandItem","text","handleOnClick","_useState","useState","_useState2","Object","slicedToArray","selected","setSelected","onClick","onMouseEnter","onMouseLeave","Command_templateObject","NewCommand","selectAnswer","commandList","answerOptions","map","answerOption","components_CommandItem","key","option","Command_Wrapper","Message_templateObject","Message","message","Message_Wrapper","Table","table","GameResult_templateObject","GameResult","answerHistory","restart","isDefeated","correctAnswers","filter","answer","isCorrect","Fragment","length","quiz","Container","App_templateObject","Main","App_templateObject2","Footer","App_templateObject3","player","exp","App","selectedOption","_this","setState","prevState","currentIdx","selectedAnswer","objectSpread","isAnswered","toConsumableArray","concat","setTimeout","showNext","isFinished","quizzes","state","isStarted","renderMain","components_GameResult","components_HeaderStatus","components_TargetScreen","Command","components_Message","this","contexts_GameContext","Provider","value","Component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.37a8ba9e.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst GameContext = createContext({});\n\nexport default GameContext;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport GameContext from \"../contexts/GameContext\";\n\nconst Wrapper = styled.div`\n  .statusUl {\n    list-style: none;\n    text-align: center;\n  }\n  .statusLi {\n    background: black;\n    display: inline-block;\n    width: 4em;\n    margin-right: 15px;\n    font-size: 14px;\n    font-weight: bold;\n    text-align: center;\n    padding: 0;\n  }\n  .status {\n    border-radius: 2px;\n    border: #fff 3px solid;\n  }\n  .statusTitle {\n    margin: -10px 20px 10px 20px;\n    padding-right: 10px;\n    font-size: 14px;\n    font-weight: bold;\n  }\n  .statusTitle > .statusLi {\n    background: black;\n  }\n  .statusContent > .statusLi {\n    margin-right: 16px;\n  }\n`;\n\nconst HeaderStatus = () => {\n  const { name, level, hp, mp } = useContext(GameContext);\n  return (\n    <Wrapper>\n      <div className=\"status\">\n        <ul className=\"statusUl statusTitle\">\n          <li className=\"statusLi\">Name</li>\n          <li className=\"statusLi\">LV</li>\n          <li className=\"statusLi\">HP</li>\n          <li className=\"statusLi\">MP</li>\n        </ul>\n        <ul className=\"statusUl statusContent\">\n          <li className=\"statusLi\">{name}</li>\n          <li className=\"statusLi\">{level}</li>\n          <li className=\"statusLi\">{hp}</li>\n          <li className=\"statusLi\">{mp}</li>\n        </ul>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default HeaderStatus;\n","export const ANSWER_TYPE = {\n  NOT_YET: 0,\n  WRONG: 1,\n  CORRECT: 2\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  background-color: #2c6ebd;\n  position: absolute;\n  left: 350px;\n\n  /* bottom: 20px; */\n  .slime_body {\n    border: none;\n    height: 73px;\n    width: 80px;\n    top: 32px;\n    left: 140px;\n  }\n  .slime {\n    background-color: #2c6ebd;\n    border: 3px solid transparent;\n    position: absolute;\n  }\n  .slime_top {\n    border-radius: 7em 7em 0 0;\n    height: 10px;\n    width: 6px;\n    top: -10px;\n    /* left: 31px; */\n    left: 64px;\n  }\n  .slime_middle {\n    background-color: black;\n    border: 7px solid transparent;\n    top: 0;\n    height: 10px;\n    width: 51px;\n  }\n  .slime_middle_left {\n    border-radius: 0 0 2em 0;\n    left: 0px;\n  }\n  .slime_middle_right {\n    border-radius: 0 0 0 2em;\n    /* left: 43px; */\n    left: 76px;\n  }\n  .slime_buttom {\n    border-radius: 2em;\n    border-width: 6px;\n    top: 17px;\n    left: -15px;\n    /* height: 55px; */\n    height: 105px;\n    /* width: 91px; */\n    width: 161px;\n  }\n  .slime_eye {\n    border: 5px solid #fff;\n    background-color: black;\n    top: 43px;\n    height: 7px;\n    width: 7px;\n  }\n\n  .slime_eye_text {\n    top: 33px;\n    /* left: 11px; */\n    height: 7px;\n    width: 7px;\n  }\n  .slime_eye_left {\n    /* left: 19px; */\n    left: 47px;\n  }\n  .slime_eye_right {\n    /* left: 42px; */\n    left: 74px;\n  }\n  /* .slime_mouse {\n    border-radius: 2em;\n    border-color: #000;\n    background-color: #f00;\n    top: 63px;\n    left: 13px;\n    height: 7px;\n    width: 46px;\n  } */\n\n  .slime_mouse_text {\n    /* border-radius: 2em; */\n    /* border-color: #000; */\n    font-size: 30px;\n    /* background-color: #f00; */\n    color: white;\n    /* background-color: red; */\n    top: 48px;\n    /* left: 25px; */\n    /* height: 50px;\n    width: 130px; */\n    /* top: 68px;\n    left: 3px;\n    height: 50px;\n    width: 130px; */\n  }\n`;\n\nconst Slime = ({ word }) => {\n  return (\n    <Wrapper>\n      <div className=\"slime_body\">\n        <div className=\"slime slime_top\" />\n        <div className=\"slime slime_middle slime_middle_left\" />\n        <div className=\"slime slime_middle slime_middle_right\" />\n        <div className=\"slime slime_buttom\" />\n\n        {/* <div className=\"slime slime_black_eye\" /> */}\n        {/* <div className=\"slime slime_eye slime_eye_left\" />\n        <div className=\"slime slime_eye slime_eye_right\" /> */}\n        <div className=\"slime slime_mouse_text\">{word}</div>\n        {/* <div className=\"slime slime_mouse\" /> */}\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default Slime;\n","import React, { useContext } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nimport GameContext from \"../contexts/GameContext\";\nimport { ANSWER_TYPE } from \"../constants/constants\";\nimport Slime from \"./Slime\";\n\nconst correct = keyframes`\n    20% {\n      -webkit-transform: translate(25px);\n    }\n    40% {\n      -webkit-transform: translate(-25px);\n    }\n    60% {\n      -webkit-transform: translate(10px);\n    }\n    80% {\n      -webkit-transform: translate(-10px);\n    }\n    100% {\n      letter-spacing: 1em;\n      opacity: 0;\n    }\n`;\n\nconst wrong = keyframes`\n    50% {\n        -webkit-transform: scale(1.5) rotate(-15deg)\n    }\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n  height: 300px;\n  .targetContainer {\n    list-style: none;\n    top: 100px;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    position: absolute;\n    margin: auto;\n  }\n  /* .target {\n    text-align: center;\n    font-size: 100px;\n    font-weight: bold;\n  } */\n\n  .target {\n    text-align: center;\n    /* font-size: 100px; */\n    font-weight: bold;\n  }\n  .correct {\n    animation-name: ${correct};\n    animation-iteration-count: 1;\n    animation-duration: 1s;\n  }\n\n  .wrong {\n    animation-name: ${wrong};\n    animation-iteration-count: 1;\n    animation-duration: 1s;\n  }\n`;\n\nconst TargetScreen = () => {\n  const { answerType, currentQuiz } = useContext(GameContext);\n\n  let answerClass = \"\";\n  switch (answerType) {\n    case ANSWER_TYPE.CORRECT:\n      answerClass = \"correct\";\n      break;\n    case ANSWER_TYPE.WRONG:\n      answerClass = \"wrong\";\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <Wrapper>\n      <div className=\"targetContainer\">\n        {/* <div className={\"target answerClass\"}>{currentQuiz.targetWord}</div> */}\n        <div className={\"target \" + answerClass}>\n          <Slime word={currentQuiz.targetWord} />\n        </div>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default TargetScreen;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst ListItem = styled.li`\n  font-weight: bold;\n  margin-bottom: 20px;\n`;\n\nconst CommandItem = ({ text, handleOnClick }) => {\n  const [selected, setSelected] = useState(false);\n\n  const handleMouseEnter = () => setSelected(true);\n  const handleMouseLeave = () => setSelected(false);\n\n  return (\n    <ListItem\n      onClick={handleOnClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      {selected ? \">\" : null}\n      {text}\n    </ListItem>\n  );\n};\nexport default CommandItem;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport CommandItem from \"./CommandItem\";\nimport GameContext from \"../contexts/GameContext\";\n\nconst Wrapper = styled.div`\n  float: left;\n  /* width: 130px; */\n  width: 130px;\n  height: 180px;\n  padding: 10px;\n  margin-bottom: 10px;\n  border-radius: 2px;\n  border: #fff 3px solid;\n  .commandUl {\n    list-style: none;\n  }\n`;\nconst NewCommand = () => {\n  const { selectAnswer, currentQuiz } = useContext(GameContext);\n  const commandList = currentQuiz.answerOptions.map(answerOption => (\n    <CommandItem\n      key={answerOption.option}\n      text={answerOption.option}\n      handleOnClick={() => selectAnswer(currentQuiz.targetWord, answerOption)}\n    />\n  ));\n  return (\n    <Wrapper>\n      <ul className=\"commandUl\">{commandList}</ul>\n    </Wrapper>\n  );\n};\n\nexport default NewCommand;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport GameContext from \"../contexts/GameContext\";\n\nconst Wrapper = styled.div`\n  margin-left: 160px;\n  padding: 20px;\n  height: 160px;\n  line-height: 22px;\n  border-radius: 2px;\n  border: #fff 3px solid;\n  .commandUl {\n    list-style: none;\n  }\n`;\n\nconst Message = () => {\n  const { message } = useContext(GameContext);\n  return (\n    <Wrapper>\n      <p>{message}</p>\n    </Wrapper>\n  );\n};\n\nexport default Message;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport GameContext from \"../contexts/GameContext\";\n\nconst Table = styled.table`\n  /* border: 1px solid white; */\n  margin-left: 160px;\n  padding: 20px;\n  height: 300px;\n  line-height: 22px;\n  border-radius: 2px;\n  border: #fff 3px solid;\n  thead {\n    font-size: 25px;\n  }\n  th,\n  tr,\n  td {\n    border: 1px solid white;\n  }\n  .correct {\n    color: green;\n  }\n  .wrong {\n    color: red;\n  }\n`;\n\nconst GameResult = () => {\n  const { answerHistory, restart, isDefeated } = useContext(GameContext);\n  const correctAnswers = answerHistory.filter(answer => {\n    if (answer.isCorrect) {\n      return answer;\n    }\n  });\n\n  return (\n    <React.Fragment>\n      <div>{isDefeated ? \"You lose...\" : \"You Win !\"}</div>\n\n      <div>\n        Total: {correctAnswers.length} / {answerHistory.length}\n      </div>\n\n      <Table>\n        <thead>\n          <tr>\n            <th>Question</th>\n            <th>Your Answer</th>\n            <th>Result</th>\n          </tr>\n        </thead>\n        <tbody>\n          {answerHistory.map(answer => (\n            <tr key={answer.targetWord}>\n              <th>{answer.targetWord}</th>\n              <td>{answer.option}</td>\n              {answer.isCorrect ? (\n                <td className=\"correct\">√</td>\n              ) : (\n                <td className=\"wrong\">X</td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n\n      {!isDefeated && <div>You're experence increased by 2 </div>}\n      <button onClick={restart}>Restart?</button>\n    </React.Fragment>\n  );\n};\n\nexport default GameResult;\n","export default [\n  // {\n  //   targetWord: \"bayabas\",\n  //   answerOptions: [\n  //     { option: \"appple\", isCorrect: false },\n  //     { option: \"banana\", isCorrect: false },\n  //     { option: \"mango\", isCorrect: false },\n  //     { option: \"guava\", isCorrect: true }\n  //   ]\n  // },\n  {\n    targetWord: \"guava\",\n    answerOptions: [\n      { option: \"mansanas\", isCorrect: false },\n      { option: \"saging\", isCorrect: false },\n      { option: \"mangga\", isCorrect: false },\n      { option: \"bayabas\", isCorrect: true }\n    ]\n  },\n  {\n    targetWord: \"delicious\",\n    answerOptions: [\n      { option: \"masarap\", isCorrect: true },\n      { option: \"maganda\", isCorrect: false },\n      { option: \"mura\", isCorrect: false },\n      { option: \"malinis\", isCorrect: false }\n    ]\n  },\n  {\n    targetWord: \"sea\",\n    answerOptions: [\n      { option: \"dagat\", isCorrect: true },\n      { option: \"bundok\", isCorrect: false }, // mountain\n      { option: \"ilog\", isCorrect: false }, // river\n      { option: \"lawa\", isCorrect: true } // lake\n    ]\n  },\n  {\n    targetWord: \"left\",\n    answerOptions: [\n      { option: \"kanan\", isCorrect: true },\n      { option: \"kaliwa\", isCorrect: true }, // right\n      { option: \"dumiretso\", isCorrect: false }, // go straight\n      { option: \"itaas\", isCorrect: true } // top\n    ]\n  }\n];\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport HeaderStatus from \"./HeaderStatus\";\nimport TargetScreen from \"./TargetScreen\";\nimport Command from \"./Command\";\nimport Message from \"./Message\";\nimport GameResult from \"./GameResult\";\n\nimport GameContext from \"../contexts/GameContext\";\nimport { ANSWER_TYPE } from \"../constants/constants\";\nimport quizzes from \"../data/quiz\";\n\nconst Container = styled.div`\n  position: relative;\n  height: auto;\n  min-height: 100%;\n  background: black;\n  color: #fff;\n`;\n\nconst Main = styled.div`\n  width: 800px;\n  margin: 0 auto;\n  padding: 20px 0;\n  font-weight: bold;\n  height: 800px;\n`;\n\nconst Footer = styled.div`\n  padding-bottom: 10px;\n`;\n\nconst player = {\n  name: \"Beginner\",\n  level: 1,\n  hp: 5,\n  mp: 4,\n  exp: 0\n};\n\nclass App extends Component {\n  selectAnswer = (targetWord, selectedOption) => {\n    const isCorrect = selectedOption.isCorrect;\n    const answerType = isCorrect ? ANSWER_TYPE.CORRECT : ANSWER_TYPE.WRONG;\n\n    this.setState(prevState => {\n      if (prevState.answerHistory.length > prevState.currentIdx) {\n        return;\n      }\n\n      const hp = isCorrect ? prevState.hp : prevState.hp - 2;\n      const message = isCorrect ? \"Correct!\" : \"Wrong!\";\n      const selectedAnswer = { targetWord, ...selectedOption };\n\n      const isDefeated = hp <= 0;\n\n      return {\n        isAnswered: true,\n        isDefeated,\n        hp,\n        message,\n        answerType,\n        answerHistory: [...prevState.answerHistory, selectedAnswer]\n      };\n    });\n\n    setTimeout(this.showNext, 1000);\n  };\n\n  showNext = () => {\n    this.setState(prevState => {\n      const currentIdx = prevState.currentIdx + 1;\n      if (prevState.answerHistory.length !== currentIdx) {\n        return;\n      }\n\n      const isFinished = currentIdx >= prevState.quizzes.length;\n\n      return {\n        answerType: ANSWER_TYPE.NOT_YET,\n        message: \"What does this word mean in Tagalog?\",\n        currentIdx,\n        isFinished,\n        currentQuiz: isFinished\n          ? prevState.quizzes[0]\n          : prevState.quizzes[currentIdx]\n      };\n    });\n  };\n\n  restart = () => {\n    this.setState({\n      isDefeated: false,\n      isFinished: false,\n      currentIdx: 0,\n      answerType: ANSWER_TYPE.NOT_YET,\n      answerHistory: [],\n      ...player\n    });\n  };\n\n  state = {\n    answerType: ANSWER_TYPE.NOT_YET,\n    selectAnswer: this.selectAnswer,\n    currentIdx: 0,\n    isAnswered: false,\n    quizzes: [],\n    message: \"What does this word mean in Tagalog?\",\n    currentQuiz: {},\n    isFinished: false,\n    isStarted: false,\n    answerHistory: [],\n    restart: this.restart,\n    ...player\n  };\n\n  componentDidMount() {\n    // Supposed to fetch via api\n    this.setState({ quizzes, currentQuiz: quizzes[0] });\n  }\n\n  renderMain = () => {\n    if (!this.state.isStarted) {\n      return (\n        <React.Fragment>\n          <div>Filipino - English Exam</div>\n          <button\n            onClick={() => {\n              this.setState({ isStarted: true });\n            }}\n          >\n            Start?\n          </button>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.quizzes.length === 0) {\n      return (\n        <React.Fragment>\n          <div>...On Loading</div>\n        </React.Fragment>\n      );\n    }\n\n    return this.state.isDefeated || this.state.isFinished ? (\n      <React.Fragment>\n        <Footer>\n          <GameResult />\n        </Footer>\n      </React.Fragment>\n    ) : (\n      <React.Fragment>\n        <HeaderStatus />\n        <TargetScreen />\n        <Footer>\n          <Command />\n          <Message />\n        </Footer>\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <header className=\"App-header\" />\n\n        <Container>\n          <Main>\n            <GameContext.Provider value={this.state}>\n              {this.renderMain()}\n            </GameContext.Provider>\n          </Main>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}